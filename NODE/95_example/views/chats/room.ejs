<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=room.title ?? 채팅방 %></title>
    <style>
        #wrap{width:90%; margin:auto;}
        span{cursor: pointer;}
        .roomTitle{
            display: flex;
            width: 100%;
            color: white; 
            background-color: rgb(129, 73, 0);
            margin-bottom:1rem;
            justify-content: space-between;
        }
        .exitBtn{
            height: 2rem;
            width: 5rem;
            margin: 2rem 1rem;
            background-color: antiquewhite;
            border: 0;
            border-radius: 0.5rem;
            font-weight: bolder;
        }
        .exitBtn:hover{
            background-color: rgb(255, 233, 108);
        }
        .content{
            display: flex;
            flex-direction: row;            
        }
        
        #log{
            display: flex;
            flex-direction: column;
            height: 600px;
            padding-right: 0.5rem;
            overflow-y: auto;          
            margin-bottom: 1rem;     
        }
        #log::-webkit-scrollbar {
            width: 10px;  /* 스크롤바의 너비 */
        }
        #log::-webkit-scrollbar-thumb{
            height: 30%; /* 스크롤바의 길이 */
            background: #a08300; /* 스크롤바의 색상 */            
            border-radius: 10px;
        }
        #log::-webkit-scrollbar-track {
            background: rgba(33, 122, 244, .1);  /*스크롤바 뒷 배경 색상*/
        }
        .content .chatArea{
            flex-grow: 1;
            padding: 1rem;
            margin-right: 5%;
            background-color: blanchedalmond;
            border-radius: 1rem;
        }
        .content .joiner{
            padding: 1rem;
            width: 25%;
            background-color: blanchedalmond;
            border-radius: 1rem;
        }
        .chatBox{
            min-width: 10%;
            max-width: 60%;
            display: flex;
            flex-direction: column;
            padding: 0.5rem;
            border-radius: 0.8rem;
        }    
        .chatBox p img{
            margin-top: 0.2rem;
            max-width: 100%;
        }    
        .mine{
            align-self: flex-end;            
            background-color: rgb(255, 197, 197);
            
        }
        .mine small{align-self: flex-end;}
        .mine p{align-self: flex-end;}
        .other{
            align-self: flex-start;            
            background-color: rgb(255, 200, 50);
        }
        .readCnt{
            color: #555;
            padding: 0.2rem;
            margin: 0;
            font-size: 0.3rem;
            background-color: blanchedalmond;
        }
        .time{
            color: #555;
            padding: 0.2rem;
            margin: 0 0 0.5rem 0;
            font-size: 0.3rem;
            background-color: blanchedalmond;
        }
        .alarm{text-align: center;margin:0.4rem 0}
        #msg{
            width: 90%;
            height:2rem;
            font-size:1.2rem;
            margin-right: 0.5rem;
        }
    </style>
</head>

<body>
    <div id="wrap">
        <div class="roomTitle">
            <h2 style="padding: 10px;"> <%=room.title%> <small style="font-size: 0.8rem;">개설자: <%=room.owner%></small></h2> 
            <div >
                <button class="exitBtn" onclick="location.href='/chats'">방목록</button>           
                <button class="exitBtn" onclick="location.href='/chats/exit?_id=<%=room._id%>'">나가기</button>                        
            </div>
        </div>
        <div class="content">
            <div class="chatArea">
                <div id="log" >
                    <% message.forEach(msg=>{%>     
                        <%if(msg.author.includes(sessionId)){%>
                            <div class="chatBox <%=msg.type%>">
                                <small><%=msg.talker%></small>
                                <%if(msg.data=="chat"){%>
                                    <p style="margin: 0;"><%=msg.content%></p>
                                <%}else{%>
                                    <p><img src="<%=msg.content%>" /></p>
                                <%}%>
                            </div>
                            <span class="readCnt <%=msg.type%>" data-cnt="<%=(room.joiner.length-msg.read.length)==0 ? '' :room.joiner.length-msg.read.length%>"><%=(room.joiner.length-msg.read.length)==0 ? '' :room.joiner.length-msg.read.length%></span>
                            <span class="time <%=msg.type%>"><%=msg.createdAt.getHours()%>시 <%=msg.createdAt.getMinutes()%>분</span>  
                        <%}%>
                    <%})%>
                </div> 
                <div style="display: flex;flex-direction:row;">
                    <input type="text" id="msg" data-room-id="<%=room._id%>"/>
                    <span style="font-size: 1.5rem;">😀</span>
                    <span id="virtuals" style="font-size: 1.5rem;">📁</span>
                    <input style="display:none;" type="file" id="attach" accept="image/*" data-room-id="<%=room._id%>"/>
                </div>
            </div>
            <div class="joiner">
                <b>참가자 목록</b>
                <div id="joiner">
                    <% for(let i=0;i<room.joiner.length;i++){%>
                        <p><%=room.joiner[i]%></p>
                    <%}%>
                </div>
            </div>
        </div>
    </div>
    <script>
        function rebalanceHeight() {
            //console.log(document.querySelector("#log").scrollHeight);
            
            document.querySelector("#log").scrollTop = document.querySelector("#log").scrollHeight;
            //console.log(document.querySelector("#log").scrollTop);
        };

        rebalanceHeight();

        document.querySelector("#virtuals").onclick = (evt) => {
            document.querySelector("#attach").dispatchEvent(new MouseEvent("click"));
        };

        function resetFile() {
            console.log("reset");
            document.querySelector("#attach").value="";
        }
        document.querySelector("#attach").onchange = async(evt) =>{
            console.log(evt.target.files[0]);
            // post + multipart/form-data로 요청을 보내야 파일이 전송이 됨
            const body = new FormData();
            body.append("attach",evt.target.files[0]);
            body.append("roomId",evt.target.dataset.roomId);            
            console.log("클라",body);
            let response = await fetch("/chats/api/upload?roomId="+evt.target.dataset.roomId,{
                method: "post",
                body: body
            });
            let json = response.json();

        };
        

        document.querySelector("#msg").onchange = (evt) => {
            if (evt.target.value.trim().length === 0) {
                return;
            }
            const headers = { "content-type": "application/json" };
            fetch("/chats/api/message", {
                headers, method: "post", body: JSON.stringify({
                    roomId: evt.target.dataset.roomId,
                    content: evt.target.value
                })
            }).then(response => {
                return response.json();
            }).then(json => {
                console.log(json);
            }).catch(err => {
                alert("서버 통신 일시 장애");
            });

            evt.target.value = "";
        };
        
        const roomId = document.querySelector("#msg").dataset.roomId;
        // const cnt = document.querySelector("#readCnt").dataset.cnt;
        const ws = new WebSocket(`ws://${location.host}/chats/room?_id=${roomId}`);
        const readCounts = document.querySelectorAll(".readCnt");
        ws.onmessage = function(rst) {
            let msg = JSON.parse(rst.data);
            if(msg.apply !== roomId){
                return;
            }

            switch(msg.type) {
                case "join" :
                    //console.log("success");
                    
                    let div = document.createElement("div");     
                    div.appendChild(document.createTextNode(msg.id+"님이 입장하였습니다."));
                    div.classList.add("alarm");                    
                    document.querySelector("#log").appendChild(div);
                    console.log(msg);
                    

                    for(let i=0; i<readCounts.length; i++){
                        if (msg.message[i].readCnt>0){
                            readCounts[i].innerHTML = `${msg.message[i].readCnt ?? '꿱'}`
                        } else { 
                            readCounts[i].innerHTML = ""
                        }
                    }
                    
                    
                    let a="";
                    for(let i=0;i<msg.joiner.length;i++){
                        a += `<p>${msg.joiner[i]} </p>`
                    }                    
                    document.querySelector("#joiner").innerHTML = a;                  
                    break;
                case "exit" :
                    console.log(msg);
                    let exitDiv = document.createElement("div");
                    exitDiv.appendChild(document.createTextNode(msg.id+"님이 퇴장하였습니다."));
                    exitDiv.classList.add("alarm");                    
                    document.querySelector("#log").appendChild(exitDiv);
                    //console.log(msg);
                    let b="";
                    for(let i=0;i<msg.joiner.length;i++){
                        b += `<p>${msg.joiner[i]} </p>`
                    }                    
                    document.querySelector("#joiner").innerHTML = b;
                    
                    break;
                case "new" :                    
                    let hours = new Date().getHours();
                    let minutes = new Date().getMinutes();                    
                    let content;
                    if (msg.data.data == "chat") {
                        content = `<p style="margin: 0;">${msg.data.content}</p>`;
                    } else {
                        content = `<p><img src="${msg.data.content}" /></p>`;
                    }
                    
                    let html = 
                    `<div class="chatBox ${msg.data.type}">
                        <small>${msg.data.talker}</small>
                        ${content}
                    </div>
                    <span class="readCnt ${msg.data.type}">${msg.data.readCnt ?? '쀍'}</span>
                    <span class="time ${msg.data.type}"> ${hours}시 ${minutes}분</span>`;
                    console.log(msg);
                    // for(let i=0; i<readCounts.length; i++){
                    //     if (msg.message[i].readCnt>0){
                    //         readCounts[i].innerHTML = `${msg.message[i].readCnt ?? '꿱'}`
                    //     } else { 
                    //         readCounts[i].innerHTML = ""
                    //     }
                    // }
                    document.querySelector("#log").innerHTML += html;                                        
            }
            rebalanceHeight();
            //console.log(msg);
        }

        
    </script>
</body>

</html>